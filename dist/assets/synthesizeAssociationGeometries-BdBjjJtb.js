import{k as r,y as a,q as u,r as y,z as d,B as h,A as l,C as x}from"./index-D51AduEB.js";import{d as G}from"./Association-BHZ3HxSk.js";let n=class extends y{constructor(o){super(o),this.maxGeometryCountExceeded=!1,this.associations=[]}};r([a({type:Boolean,json:{write:!0}})],n.prototype,"maxGeometryCountExceeded",void 0),r([a({type:[G],json:{write:!0}})],n.prototype,"associations",void 0),n=r([u("esri.rest.networks.support.AssociationGeometriesResult")],n);const $=n;async function z(o,s,e){const t=d(o),i={...s.toJSON(),f:"json"},c=h({...t.query,...i});e?e.method="post":e={method:"post"};const p=l(c,e),m=`${t.path}/synthesizeAssociationGeometries`;return x(m,p).then(f=>A(f,s.outSpatialReference))}function A(o,s){const{data:e}=o,t=$.fromJSON(e);if(s)for(const i of t.associations)i.geometry.spatialReference=s.clone();return t}export{z as synthesizeAssociationGeometries};
